<!DOCTYPE html>
<!-- NOTE: doc/usermanual/pages is autogenerated from spec/usermanual -->
<html>
<head>
  <%
  #TODO: get rid of header/layout duplication
  %>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>TMC webapp user manual - teacher</title>

  <link rel="stylesheet" type="text/css" href="../css/usermanual.css" />
  <link rel="stylesheet" type="text/css" href="../lib/shjs/sh_style.css" />

  <script type="text/javascript" src="../lib/jquery-1.7.1.min.js"></script>
  <script type="text/javascript" src="../lib/shjs/sh_main.min.js"></script>
  <script type="text/javascript" src="../lib/shjs/sh_java.min.js"></script>
  <script type="text/javascript" src="../js/toc.js"></script>

  <script type="text/javascript">
    $(document).ready(function() {
      sh_highlightDocument();
      $('#toc').prepend('<h2>Contents</h2>');
      makeToc($('#toc'));
    });
  </script>
</head>
<body>

<%
require 'cgi' # for escapeHTML
%>

  <%
    admin = FactoryGirl.create(:admin, :login => 'admin', :password => 'admin')
    org = FactoryGirl.create(:accepted_organization, name: 'Some organization')
    org.teachers << admin
    org.save
  %>

  <h1>Teacher Manual</h1>

  <div id="toc"></div>

  <p>
    Teacher is a user that has a teachership status to one or more organizations.
    Their main responsibility is to manage their organization, along with regular
    duties related to teaching their students.
  </p>

  <h2>Course templates</h2>

  <p>
    Simplest way to create a course is to copy it from a template. This way teacher won't
    have to create new repositories from which new course will be based off.
  </p>

</body>
</html>
